<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Opportunity extends \AppBundle\Entity\Opportunity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idOpp', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobTitle', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobCategory', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobDescription', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'budget', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobDraft', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobDuration', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'expiryDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'addedDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idEntreprise', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idSkill', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'freelancerid'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idOpp', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobTitle', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobCategory', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobDescription', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'budget', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobDraft', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jobDuration', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'expiryDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'addedDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idEntreprise', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idSkill', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'freelancerid'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Opportunity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdOpp()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdOpp();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdOpp', []);

        return parent::getIdOpp();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobTitle($jobTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobTitle', [$jobTitle]);

        return parent::setJobTitle($jobTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobTitle', []);

        return parent::getJobTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobCategory($jobCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobCategory', [$jobCategory]);

        return parent::setJobCategory($jobCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobCategory', []);

        return parent::getJobCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobDescription($jobDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobDescription', [$jobDescription]);

        return parent::setJobDescription($jobDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobDescription', []);

        return parent::getJobDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudget($budget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudget', [$budget]);

        return parent::setBudget($budget);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudget', []);

        return parent::getBudget();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobDraft($jobDraft)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobDraft', [$jobDraft]);

        return parent::setJobDraft($jobDraft);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobDraft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobDraft', []);

        return parent::getJobDraft();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobDuration($jobDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobDuration', [$jobDuration]);

        return parent::setJobDuration($jobDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobDuration', []);

        return parent::getJobDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiryDate($expiryDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiryDate', [$expiryDate]);

        return parent::setExpiryDate($expiryDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiryDate', []);

        return parent::getExpiryDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddedDate($addedDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddedDate', [$addedDate]);

        return parent::setAddedDate($addedDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddedDate', []);

        return parent::getAddedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdEntreprise(\AppBundle\Entity\FosUser $idEntreprise = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdEntreprise', [$idEntreprise]);

        return parent::setIdEntreprise($idEntreprise);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdEntreprise()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdEntreprise', []);

        return parent::getIdEntreprise();
    }

    /**
     * {@inheritDoc}
     */
    public function addIdSkill(\AppBundle\Entity\Skills $idSkill)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIdSkill', [$idSkill]);

        return parent::addIdSkill($idSkill);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIdSkill(\AppBundle\Entity\Skills $idSkill)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIdSkill', [$idSkill]);

        return parent::removeIdSkill($idSkill);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdSkill()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdSkill', []);

        return parent::getIdSkill();
    }

    /**
     * {@inheritDoc}
     */
    public function addFreelancerid(\AppBundle\Entity\FosUser $freelancerid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFreelancerid', [$freelancerid]);

        return parent::addFreelancerid($freelancerid);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFreelancerid(\AppBundle\Entity\FosUser $freelancerid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFreelancerid', [$freelancerid]);

        return parent::removeFreelancerid($freelancerid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFreelancerid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreelancerid', []);

        return parent::getFreelancerid();
    }

}
