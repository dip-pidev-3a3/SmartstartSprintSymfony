<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Blogposts extends \AppBundle\Entity\Blogposts implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postId', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postDate', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postContent', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postStatus', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postType', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postCommentCount', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postLikesCount', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'articleTitle', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'articleContent', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'author', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'image'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postId', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postDate', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postContent', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postStatus', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postType', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postCommentCount', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'postLikesCount', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'articleTitle', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'articleContent', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'author', '' . "\0" . 'AppBundle\\Entity\\Blogposts' . "\0" . 'image'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Blogposts $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPostLikesCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostLikesCount', []);

        return parent::getPostLikesCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostLikesCount($postLikesCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostLikesCount', [$postLikesCount]);

        return parent::setPostLikesCount($postLikesCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getPostId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostId', []);

        return parent::getPostId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostId($postId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostId', [$postId]);

        return parent::setPostId($postId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostDate', []);

        return parent::getPostDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostDate($postDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostDate', [$postDate]);

        return parent::setPostDate($postDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostContent', []);

        return parent::getPostContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostContent($postContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostContent', [$postContent]);

        return parent::setPostContent($postContent);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostStatus', []);

        return parent::getPostStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostStatus($postStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostStatus', [$postStatus]);

        return parent::setPostStatus($postStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostType', []);

        return parent::getPostType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostType($postType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostType', [$postType]);

        return parent::setPostType($postType);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostCommentCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostCommentCount', []);

        return parent::getPostCommentCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostCommentCount($postCommentCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostCommentCount', [$postCommentCount]);

        return parent::setPostCommentCount($postCommentCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticleTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticleTitle', []);

        return parent::getArticleTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticleTitle($articleTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticleTitle', [$articleTitle]);

        return parent::setArticleTitle($articleTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticleContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticleContent', []);

        return parent::getArticleContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticleContent($articleContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticleContent', [$articleContent]);

        return parent::setArticleContent($articleContent);
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(\AppBundle\Entity\FosUser $author = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

}
