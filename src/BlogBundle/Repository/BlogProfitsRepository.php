<?php

namespace BlogBundle\Repository;
use Doctrine\DBAL\DBALException;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * PostLikeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogProfitsRepository extends \Doctrine\ORM\EntityRepository
{
    public function findProfit($id)
    {
        $dql = $this->createQueryBuilder('BlogProfits');
        $dql->orderBy('BlogProfits.StartDate', 'DESC')->where("BlogProfits.author =".$id);
        $dql->setMaxResults(1);
        $query = $dql->getQuery();
        $query->setMaxResults(1);
        return $query->getResult();
    }
    public function findByPage($page = 1, $max = 10)
    {
        $dql = $this->createQueryBuilder('postprofits');
        $dql->orderBy('postprofits.StartDate', 'DESC');

        $firstResult = ($page - 1) * $max;

        $query = $dql->getQuery();
        $query->setFirstResult($firstResult);
        $query->setMaxResults($max);

        $paginator = new Paginator($query);

        if(($paginator->count() <=  $firstResult) && $page != 1) {
            throw new NotFoundHttpException('Page not found');
        }

        return $paginator;
    }
    public function ChangeStatus($id,$status)
    {
        $qb = $this->createQueryBuilder('BlogProfits')
            ->update()
            ->set('BlogProfits.Status', $status)
            ->where('BlogProfits.Id=' . $id);
        return $qb->getQuery()
            ->getResult();
    }
}
